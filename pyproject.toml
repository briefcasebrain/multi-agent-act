[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-agent-collab-learning"
version = "0.1.0"
description = "A comprehensive Python library for implementing advanced multi-agent collaborative learning scenarios"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Aansh Shah", email = "aansh@briefcasebrain.com"}
]
maintainers = [
    {name = "Aansh Shah", email = "aansh@briefcasebrain.com"}
]
keywords = [
    "multi-agent",
    "collaborative learning",
    "reinforcement learning",
    "ai",
    "machine learning",
    "tournaments",
    "knowledge distillation"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "networkx>=2.8.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "isort>=5.10.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0"
]
ai2thor = [
    "ai2thor>=4.0.0"
]
all = [
    "multi-agent-collab-learning[dev,docs,ai2thor]"
]

[project.urls]
Homepage = "https://github.com/briefcasebrain/multi-agent-collab-learning"
Documentation = "https://multi-agent-collab-learning.readthedocs.io/"
Repository = "https://github.com/briefcasebrain/multi-agent-collab-learning.git"
Issues = "https://github.com/briefcasebrain/multi-agent-collab-learning/issues"

[tool.setuptools.packages.find]
include = ["multi_agent_collab_learning*"]

[tool.setuptools.package-data]
multi_agent_collab_learning = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=multi_agent_collab_learning",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests"
]